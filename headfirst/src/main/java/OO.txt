OO四个基本特征:继承、封装、多态、抽象
OO九个基本原则:
	1.找出应用中可能需要变化之处,把他们独立出来，不要和那些不需要变化的代码耦合耦合在一起
		把代码分成状态稳定和状态不稳定的部分，把状态不稳定的部分独立出来并对其进行封装
	2.针对抽象编程，而不针对实现编程
	3.多用组合，少用继承
	    使用组合构建的系统有很大的弹性
	4.为了交互对象之间的松耦合设计而努力
	    如观察者模式中，改变主题或者观察者其中一方，并不会影响到另一方
	5.类应该对扩展开放,对修改关闭
设计模式和OO的关系:
	OO原则是我们的目标，而设计模式是我们的做法
OO设计的目的:
    可复用、可扩展、可维护
针对接口编程:
	1.即针对超类编程,超类指抽象类或者接口
	2.可以将一个超类聚合到一个类中，作为成员变量
松耦合:
    两个对象之间可以交互,但他们不清楚彼此的细节
关于继承和组合:
    继承会影响系统弹性,组合影响小一些
    通过继承而获取到的行为,是在编译时静态就决定好的,
    通过组合获取到的行为,是在运行时动态扩展进来的
