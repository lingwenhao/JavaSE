Java基础加强
1.多态:父类引用指向子类对象
	方法重写依赖于继承，继承依赖于类的实例，静态方法依赖于类，和实例没有什么关系，static方法不能被重写
	Java的多态体现在运行时，静态方法提现在编译时
	构造方法不能被重写，因为构造方式是隐式的static方法
    类的加载全过程：加载->验证->准备->解析->初始化 在这里加载到解析阶段都是JVM进行主导,而在初始化阶段才
        是真正java执行代码的阶段.static成员在初始化阶段之前会被加载到方法区中, 并且进行初始化赋值等操作,
        并且分配内存, 而非static成员确是在初始化后解析后的初始化阶段才会被"加载"分配内存, 也就是代码中使
        用new进行创建实例的时候, 这样也就验证了 类可以直接调用static成员没有问题,而直接调用非static的成
        员就会出问题, 因为违背了java加载初始化的逻辑.
	注意: 如果static调用非static成员 编译器会出现 No enclosing instance of type * is accessible 异常错误.
