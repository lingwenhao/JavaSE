优点：
    1.使用建造者模式可以使客户端不必知道产品内部组成的细节,将产品本身与产品的创建解耦，使得相同的创建过程可以创建不同的对象
    2.具体的建造者类之间是相互独立的，因此可以很方便的替换或者增加新的建造者，用户使用不同的建造者即可得到不同的产品对象
      由指挥者针对抽象构建者编程，增加新的构建者无需修改原有类库，系统扩展方便，符合开闭原则。
    3.具体的建造者相互独立，因此可以对建造的过程逐步细化，而不会对其他模块产生任何影响。

缺点：
    建造者模式所创建的产品一般具有较多的共同点，其组成部分相似；如果产品之间的差异性很大，则不适合使用建造者模式，因此其使用范围受到一定的限制。
    如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大。