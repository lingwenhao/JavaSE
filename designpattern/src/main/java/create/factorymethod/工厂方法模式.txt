工厂方法模式(Factory Method):
    描述:
        -把具体产品的创建推迟到工厂类的子类（具体工厂）中，此时工厂类不再负责所有产品的创建，而只是给出具体工厂必须
         实现的接口，这样工厂方法模式在添加新产品的时候就不修改工厂类逻辑而是添加新的工厂子类，符合开放封闭原则，克
         服了简单工厂模式中缺点
    角色分析:
        抽象产品角色(Product):定义工厂方法所创建的对象的接口，也就是实际需要使用的对象的接口。
        具体产品角色(ConcreteProduct):具体的Product接口的实现对象。
        抽象工厂角色(Creator):创建器，声明工厂方法，工厂方法通常会返回一个Product类型的实例对象，而且多是抽象方法。
                            也可以在Creator里面提供工厂方法的默认实现，让工厂方法返回一个缺省的Product类型的实例对象。
        具体工厂角色(ConcreteCreator):具体的创建器对象，覆盖实现Creator定义的工厂方法，返回具体的Product实例。
    优点:
        -面向接口编程，而不面向实现编程
	缺点:每增加一个类，就要对应的创建一个工厂
	注意:
	    -这里的Product可以指很多，可是是一辆车，或者是一个具有特定类型方法的类，如果导出文件的抽象类
	示例/场景:
