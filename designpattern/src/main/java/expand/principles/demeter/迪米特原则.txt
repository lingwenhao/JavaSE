迪米特法则:只与直接的朋友通信，最少知道原则，避免与非直接朋友的耦合
        对自己依赖的类知道的越少越好，对于被依赖的类不管多复杂，都尽量将逻辑封在内部
迪米特法则核心:降低类之间的耦合，只是减少不必要的耦合，并不是要求完全解除耦合
    直接朋友:出现在返回值、成员变量、方法参数中的类
    间接朋友:出现在方法中作为局部变量的类,如果
    class A{
        public void fun(){}
    }
    class B{
        public void test(){
            //A就是B的间接朋友
            A a = new A();
            a.fun();
        }
    }